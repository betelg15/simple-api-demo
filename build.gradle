plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.openapi.generator' version '6.6.0'
}

apply plugin: 'org.openapi.generator'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.compileJava {
	dependsOn(tasks.openApiGenerate)
}

tasks.compileTestJava {
	dependsOn(tasks.openApiGenerate)
}

sourceSets {
	main {
		java.srcDir("$buildDir/openapi/src/main/java")
	}
}

openApiGenerate {
	typeMappings = [
			"DateTime": "Instant",
			"Decimal": "BigDecimal"
	]
	importMappings = [
			"Instant": "java.time.Instant",
			"BigDecimal": "java.math.BigDecimal"
	]
	skipValidateSpec = true
	generatorName = 'spring'
	inputSpec = "$projectDir/doc/api-spec.yaml"
	outputDir = "$buildDir/openapi"
	// for customizing generated source code
	//templateDir = "$rootDir/openapi/template"
	// https://openapi-generator.tech/docs/generators/kotlin-spring
	//def basePackage = "com.example.demo"
	configOptions = [
			interfaceOnly: "true",
			basePackage: "com.example.demo",
			modelPackage: "com.example.demo.rest.model",
			apiPackage: "com.example.demo.rest",
			useSwaggerUI: "false",
			useSpringBoot3: "true",
			annotationLibrary: "none",
			documentationProvider: "none",
			enumPropertyNaming: "original",
			useTags: "true"
	]
}

